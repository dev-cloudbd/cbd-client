#!/bin/bash

. $libdir/cbdsetup/cbdsetup.functions

usage () {
    cat <<-EOF
	Usage: cbddisks_start CBD [CBD]...       start one or more cbdtab disks (implies -f)
	       cbddisks_start -a [-f]            start all cbdtab disks

	       CBD := remote:disk                a disk configured in the cbdtab file

	Start CloudBD disks configured in \$TABFILE
	-a, --all                     start all configured disks
	-f, --force                   do not skip noauto disks
	-h, --help                    display this help and exit
	EOF
}

main () {
    local cbds="" param all

    for param in "\$@"; do
        case "\$param" in
        -h|-help|--help)
            usage
            exit 0
            ;;
        -a|-all|--all)
            all="yes"
            ;;
        -f|-force|--force)
            FORCE_START="yes"
            ;;
        -*)
            >&2 echo "\$0: error - invalid option -- '\$param'"
            >&2 echo "Try '\$0 --help' for more info"
            exit 1
            ;;
        *)
            if [ "x\$cbds" = "x" ]; then
                cbds="\$param"
            else
                cbds="\$cbds \$param"
            fi
            FORCE_START="yes"
            ;;
        esac
    done

    if [ "x\$all" = "xyes" ] && [ ! "x\$cbds" = "x" ]; then
        >&2 echo "\$0: error - all disks option specified, no CBD disk arguments expected"
        >&2 echo "Try '\$0 --help' for more info"
        exit 1
    elif [ ! "x\$all" = "xyes" ] && [ "x\$cbds" = "x" ]; then
        >&2 echo "\$0: error - no disks specified"
        >&2 echo "Try '\$0 --help' for more info"
        exit 1
    fi

    if [ "\$(id -u)" -ne "0" ]; then
        >&2 echo "\$0: error - must be run as root"
        exit 1
    fi

    if [ "x\$IS_SYSTEMD" = "xyes" ]; then
        if ! systemctl daemon-reload 2>/dev/null; then
            >&2 echo "\$0: error - unable to issue systemctl daemon-reload"
            exit 1
        fi

        if [ "x\$all" = "xyes" ]; then
            log_action_msg "Starting CloudBD disks"
            check_systemd_cbdtab

            local disks=(\$(systemctl list-dependencies --plain cbdsetup.target))
            local disk i status overall=0

            for ((i=1; i<\${#disks[@]}; i++)); do
                disk="\${disks[\$i]#"cbdsetup@"}"
                disk="\${disk%".service"}"

                if systemctl status "\${disks[\$i]}" >/dev/null 2>&1; then
                    log_action_cont_msg "Starting \$disk (already running)"
                    log_action_end_msg 0
                    continue
                fi

                systemctl start "\${disks[\$i]}" 2>/dev/null
                status=\$?
                log_action_cont_msg "\$(systemctl status -o cat "\${disks[\$i]}" | grep -m1 "Starting \${disk}.*")"
                if ! [ \$status = 0 ]; then
                    log_action_end_msg 1
                    overall=1
                else
                    log_action_end_msg 0
                fi
            done
            log_action_cont_msg "CloudBD disks started"
            log_action_end_msg \$overall
            exit \$overall
        else
            for cbd in \$cbds; do
                local status
                
                systemctl start "cbdsetup@\${cbd}.service" 2>/dev/null
                status=\$?
                log_action_cont_msg "\$(systemctl status -o cat "cbdsetup@\${cbd}.service" | grep -m1 "Starting \${cbd}.*")"
                if ! [ \$status = 0 ]; then
                    log_action_end_msg 1
                    exit 1
                else
                    log_action_end_msg 0
                fi
            done
            exit 0
        fi
    else
        if ! ulimit -l unlimited 2>/dev/null; then
            >&2 echo "\$0: error - failed to set ulimit -l (max locked memory)"
            exit 1
        fi

        check_systemd_cbdtab
        do_start \$cbds
        exit \$?
    fi
}

main "\$@"
